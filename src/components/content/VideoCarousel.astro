---
//src/components/content/VideoCarousel.astro
import { onMount } from 'astro/components';
import emblaCarousel from 'embla-carousel';
import { setupPlayr } from 'plyr';

const videos = [
  {
    title: "Exploring the Cosmos",
    src: "/videos/space-exploration.mp4",
    thumbnail: "/images/thumb1.jpg"
  },
  {
    title: "Mars Rover Discoveries",
    src: "/videos/mars-rover.mp4",
    thumbnail: "/images/thumb2.jpg"
  },
  {
    title: "Hubble's Greatest Hits",
    src: "/videos/hubble.mp4",
    thumbnail: "/images/thumb3.jpg"
  }
];
---

<div class="embla my-12" x-data>
  <div class="embla__viewport" x-ref="viewport">
    <div class="embla__container">
      {videos.map((video, index) => (
        <div class="embla__slide" key={index}>
          <div class="card bg-base-200 overflow-hidden">
            <video 
              class="w-full aspect-video" 
              poster={video.thumbnail}
              controls
              x-ref={`video-${index}`}
            >
              <source src={video.src} type="video/mp4" />
            </video>
            <div class="card-body p-4">
              <h3 class="card-title">{video.title}</h3>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>

  <script is:inline>
    document.addEventListener('alpine:init', () => {
      Alpine.data('videoCarousel', () => ({
        embla: null,
        playr: null,
        
        init() {
          this.$nextTick(() => {
            // Initialize Embla Carousel
            this.embla = emblaCarousel(this.$refs.viewport, {
              loop: true,
              align: 'center',
              skipSnaps: false
            });
            
            // Initialize Playr for video controls
            const videos = this.videoRefs.map(ref => this.$refs[ref]);
            this.playr = setupPlayr(this.embla, {
              players: videos,
              autoplay: false,
              mute: true
            });
          });
        },
        
        get videoRefs() {
          return Array.from({ length: videos.length },   (_, i) => `video-${i}`);
        },
        
        destroy() {
          if (this.embla) this.embla.destroy();
          if (this.playr) this.playr.destroy();
        }
      }));
    });
  </script>
</div>

<style>
  .embla {
    --slide-spacing: 1rem;
    --slide-size: 80%;
    --slide-height: 19rem;
  }
  .embla__viewport {
    overflow: hidden;
  }
  .embla__container {
    display: flex;
    height: auto;
    margin-left: calc(var(--slide-spacing) * -1);
  }
  .embla__slide {
    flex: 0 0 var(--slide-size);
    min-width: 0;
    padding-left: var(--slide-spacing);
  }
  @media (min-width: 768px) {
    .embla {
      --slide-size: 40%;
    }
  }
  @media (min-width: 1024px) {
    .embla {
      --slide-size: 30%;
    }
  }
</style>
