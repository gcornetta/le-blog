---
/**
 * BlogSearch.astro
 * A DaisyUI search box with a magnifying glass icon and Alpine.js-powered live results.
 *
 * Props:
 *  - apiPath?: string  (default: '/api/v1/search/blog')
 *  - placeholder?: string (default: 'Search articles...')
 *  - limit?: number (client-side display limit; default 10)
 */
const {
  apiPath = '/api/v1/search/blog-search',
  placeholder = 'Search articles...',
  limit = 10,
} = Astro.props;
---
<style is:global>
  /* Prevent FOUC for Alpine-managed panels */
  [x-cloak] { display: none !important; }
</style>

<div
  x-data="blogSearchComponent({ apiPath: '{{apiPath}}', limit: {{limit}} })"
  @keydown.escape="close()"
  class="relative w-full max-w-2xl"
>
  <!-- Input with left icon and clear button -->
  <label class="input input-bordered w-full flex items-center gap-2 pr-10 pl-10">
    <!-- Magnifying glass icon (left) -->
    <svg class="w-5 h-5 opacity-60 pointer-events-none absolute left-3" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" aria-hidden="true">
      <path stroke-linecap="round" stroke-linejoin="round"
        d="M21 21l-4.35-4.35M10.5 18a7.5 7.5 0 1 1 0-15 7.5 7.5 0 0 1 0 15z" />
    </svg>

    <input
      type="search"
      class="grow bg-transparent outline-none"
      :value="q"
      @input.debounce.250ms="q = $event.target.value; search()"
      @focus="open = true; if (results.length === 0) search()"
      :placeholder="placeholder"
      aria-label="Search blog articles"
    />

    <!-- Clear button (right) -->
    <button
      class="btn btn-ghost btn-xs absolute right-2"
      type="button"
      x-show="q.length"
      @click="clear()"
      aria-label="Clear search"
    >
      ✕
    </button>

    <!-- Spinner (right) -->
    <svg x-show="loading" class="animate-spin absolute right-12 w-5 h-5 opacity-60" viewBox="0 0 24 24" aria-hidden="true">
      <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" opacity=".25"></circle>
      <path d="M4 12a8 8 0 0 1 8-8" stroke="currentColor" stroke-width="4" fill="none" stroke-linecap="round"></path>
    </svg>
  </label>

  <!-- Results panel -->
  <div
    x-cloak
    x-show="open"
    @click.outside="close()"
    class="absolute z-50 mt-2 w-full overflow-hidden rounded-2xl border border-base-200 bg-base-100 shadow-xl"
  >
    <template x-if="!loading && results.length === 0 && q.length > 0">
      <div class="p-4 text-sm text-base-content/70">No matches for “<span x-text="q"></span>”.</div>
    </template>

    <ul class="menu menu-sm">
      <template x-for="item in results.slice(0, limit)" :key="item.slug">
        <li>
          <a
            class="py-3 px-4 flex items-center gap-3 hover:bg-base-200"
            :href="`/blog/${item.slug}`"
            @click="close()"
          >
            <svg class="w-4 h-4 opacity-60" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-4.35-4.35M10.5 18a7.5 7.5 0 1 1 0-15 7.5 7.5 0 0 1 0 15z" />
            </svg>
            <span class="truncate" x-text="item.title"></span>
          </a>
        </li>
      </template>
    </ul>
  </div>
</div>

<script is:inline>
  function blogSearchComponent({ apiPath = '/api/v1/search/blog-search', limit = 10 } = {}) {
    return {
      q: '',
      results: [],
      loading: false,
      open: false,
      placeholder: 'Search articles...',
      limit,
      async search() {
        const q = this.q.trim();
        this.loading = true;
        try {
          const res = await fetch(`${apiPath}?q=${encodeURIComponent(q)}`, { cache: 'no-store' });
          if (!res.ok) throw new Error(`HTTP ${res.status}`);
          this.results = await res.json();
        } catch (e) {
          console.error('Search failed:', e);
          this.results = [];
        } finally {
          this.loading = false;
          this.open = true;
        }
      },
      clear() {
        this.q = '';
        this.results = [];
        this.open = false;
      },
      close() {
        this.open = false;
      },
    }
  }
</script>
